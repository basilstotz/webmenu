#!/bin/sh

export WM_HOME=$HOME/.config/webmenu

# Spawn menu pipe path. Create unique for each X instance
export SPAWNMENU=$(hostname)-$(echo $DISPLAY | sed -r s/[.][0-9]*$//)




# Log file for the current Webmenu instance
export WM_LOG_FILE="$WM_HOME/current.log"


help(){
    echo "
    Usage: $(basename $0) [options]

    Start Webmenu

    --daemonize     Daemonize the process. Cannot be used with --no-mon
                    Output will be written to $WM_LOG_FILE
    --no-mon        Disable automatic restarting with mon
    -s --stop       Stop the running Webmenu process


    Hacking options

    -b --build      Do production build of Webmenu before starting it
    -w --watch      Use inotify to build debug builds of webmenu
    -d --devtools   Start with developer tools
    --test          Execute Webmenu tests
    "
}

export WM_ENV=production


# Webmenu installation path
if [ -f package.json ]; then
    WM_PATH=$(pwd)
else
    WM_PATH="/opt/webmenu"
fi


# https://github.com/visionmedia/mon
mon_args=""
mon_pidfile="$WM_HOME/mon.pid"

wm_args=""

use_mon=true

while true; do
    case "$1" in
        -h|--help)
            help && exit 0
        ;;
        --daemon|--daemonize)
            # Enable error reporting to fluend only in daemon mode
            export WM_FLUENTD_ACTIVE=true
            mon_args="$mon_args --daemonize"
            shift
        ;;
        -d)
            wm_args="$wm_args --devtools"
            shift
        ;;
        --no-mon)
            use_mon=false
            shift
        ;;
        -b|--build)
            node make.js all
            shift
        ;;
        --build-node)
            node make.js coffee
            shift
        ;;
        -w|--watch)
            echo "Using inotify to do automatic debug builds."
            echo "Start webmenu from another terminal."
            read -p "[Enter to continue]" _
            exec node make.js --debug --watch
        ;;
        -s|--stop)
            set -x
            kill $(cat $mon_pidfile)
            exit 0
        ;;
        "")
            break
        ;;
        *)
            wm_args="$wm_args $1"
            shift
        ;;
    esac
done

set -eu

cd $WM_PATH

# Truncate log file to avoid excess disk usage
if [ -f "$WM_LOG_FILE" ]; then
    cat "$WM_LOG_FILE" | tail --lines 1000 > "$WM_LOG_FILE"
fi


mkdir -p $WM_HOME

echo "Starting webmenu from $WM_PATH"
echo "Logging to $WM_LOG_FILE"

restart_script="$(pwd)/bin/webmenu-on-restart"
error_script="$(pwd)/bin/webmenu-on-error"

# Save startup time to a file to log start up times
date +%s > "$WM_HOME/started"

set -x

if $use_mon; then
    exec mon $mon_args \
        --log $WM_LOG_FILE \
        --attempts 2 \
        --mon-pidfile "$mon_pidfile" \
        --on-restart $restart_script \
        --on-error $error_script \
        "nw . $wm_args"
else
    exec nw . $wm_args
fi

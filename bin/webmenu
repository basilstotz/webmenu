#!/bin/sh

WM_HOME=$HOME/.config/webmenu

# Spawn menu pipe path. Create unique for each X instance
export SPAWNMENU=$(hostname)-$(echo $DISPLAY | sed -r s/[.][0-9]*$//)

# Save startup time to an env to log startup times
export WM_STARTUP_TIME=$(date +%s)

export WM_ENV=production

# https://github.com/visionmedia/mon
mon_args=""
mon_pidfile="$WM_HOME/mon.pid"

# Log file for the current Webmenu instance
export WM_LOG_FILE="$WM_HOME/current.log"


help(){
    echo "
    Usage: $(basename $0) [options]

    Start Webmenu

    -d --daemonize  Daemonize the process.
                    Output will be written to $WM_LOG_FILE
    -s --stop       Stop the running Webmenu process
    --devtools      Start with developer tools
    --test          Execute Webmenu tests
    "
}


set -eu

# Webmenu installation path
if [ -f package.json ]; then
    WM_PATH=$(pwd)
else
    WM_PATH="/opt/webmenu"
fi

cd $WM_PATH

for arg in $@; do
    case "$arg" in
        -h|--help)
            help && exit 0
        ;;
        -d|--daemonize)
            # Enable error reporting to fluend only in daemon mode
            export WM_FLUENTD_ACTIVE=true
            mon_args="$mon_args --daemonize"
        ;;
        -s|--stop)
            set -x
            kill $(cat $mon_pidfile)
            exit 0
        ;;
    esac
done


# Truncate log file to avoid excess disk usage
if [ -f "$WM_LOG_FILE" ]; then
    cat "$WM_LOG_FILE" | tail --lines 1000 > "$WM_LOG_FILE"
fi


mkdir -p $WM_HOME

echo "Starting webmenu from $WM_PATH"
echo "Logging to $WM_LOG_FILE"

export CRASH_TYPE="restart"
export WM_RESTART_SCRIPT="$(pwd)/bin/webmenu-on-restart"
error_script="$(pwd)/bin/webmenu-on-error"

set -x
exec mon $mon_args \
    --log $WM_LOG_FILE \
    --attempts 2 \
    --mon-pidfile "$mon_pidfile" \
    --on-restart $WM_RESTART_SCRIPT \
    --on-error $error_script \
    "nw . $@"
